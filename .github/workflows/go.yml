# workflow name
name: Generate release-artifacts

# on events
on:
  release:
    types: 
        - created

# workflow tasks
jobs:
  generate:
    name: Building release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
        # Add support for more platforms with QEMU (optional)
        # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.19.1'
      - name: Install dependencies
        run: |
          sudo apt-get install build-essential wget zip  libc6-dev-arm64-cross && \
          echo "/usr/bin/x86_64-w64-mingw32-gcc" >> GITHUB_PATH
      - name: Install gox
        run: go install github.com/mitchellh/gox@latest
      - name: Set VERSION env
        run: echo VERSION=$(basename ${GITHUB_REF}) >> ${GITHUB_ENV}
      - name: Build package
        run: |
          make clean && \
          make build && \
          mv server/.env.example build/.env
          pwd && \
          mkdir loadtester-${VERSION}-darwin-amd64 && cp -rf build/darwin/amd64/server build/.env ui/dist loadtester-${VERSION}-darwin-amd64/ && tar cvfz loadtester-${VERSION}-darwin-amd64.tar.gz loadtester-${VERSION}-darwin-amd64 && \
          mkdir loadtester-${VERSION}-linux-amd64 && cp -rf build/linux/amd64/server build/.env ui/dist loadtester-${VERSION}-linux-amd64/ && tar cvfz loadtester-${VERSION}-linux-amd64.tar.gz loadtester-${VERSION}-linux-amd64 && \
          mkdir loadtester-${VERSION}-linux-arm64 && cp -rf build/linux/arm64/server build/.env ui/dist loadtester-${VERSION}-linux-arm64/ && tar cvfz loadtester-${VERSION}-linux-arm64.tar.gz loadtester-${VERSION}-linux-arm64 && \
          mkdir loadtester-${VERSION}-windows-amd64 && cp -rf build/windows/amd64/server.exe build/.env ui/dist loadtester-${VERSION}-windows-amd64/ && tar cvfz loadtester-${VERSION}-windows-amd64.tar.gz loadtester-${VERSION}-windows-amd64
      # step 3: Copy build-artifacts in the GitHub release
      - name: Copy build-artifacts
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: "./*.tar.gz"
